type DevToArticle {
  id: ID!
  title: String!
  description: String
  cover_image: String
  readable_publish_date: String
  tag_list: String
  path: String!
  slug: String!
  url: String!
  published_timestamp: Date!
  username: String!
  github_username: String!
  body_html: String
  body_markdown: String
}

type Query {
  publishedDevToArticleById(id: ID!): DevToArticle
    @rest(
      endpoint: "https://dev.to/api/articles/$id"
      setters: [
        { field: "username", path: "user.username" }
        { field: "github_username", path: "user.github_username" }
      ]
    )
  publishedDevToArticleByPath(path: String!): DevToArticle
    @rest(
      endpoint: "https://dev.to/api/articles/$path"
      setters: [
        { field: "username", path: "user.username" }
        { field: "github_username", path: "user.github_username" }
      ]
    )
  myDevToArticles: [DevToArticle]
    @rest(
      endpoint: "https://dev.to/api/articles?username=$username"
      setters: [
        { field: "username", path: "user.username" }
        { field: "github_username", path: "user.github_username" }
        { field: "tag_list", path: "tags" }
      ]
      configuration: "dev_config"
    )