type Customer {
  id: ID!
  lastOrderId: ID
  firstName: String
  lastName: String
  email: String
}

type Query {
  shopifyCustomer(id: ID!): Customer
    @rest(
      setters: [
        { field: "lastOrderId", path: "last_order_id" }
        { field: "firstName", path: "first_name" }
        { field: "lastName", path: "last_name" }
      ]
      resultroot: "customer"
      endpoint: "https://$api_key:$api_password@$store_name;.myshopify.com/admin/api/2020-01/customers/$id.json"
      configuration: "shopify_config"
    )
  shopifyCustomerByEmail(email: String!): Customer
    @rest(
      setters: [
        { field: "lastOrderId", path: "last_order_id" }
        { field: "firstName", path: "first_name" }
        { field: "lastName", path: "last_name" }
      ]
      resultroot: "customers[]"
      endpoint: "https://$api_key:$api_password@$store_name;.myshopify.com/admin/api/2020-01/customers/search.json?query=$email;"
      configuration: "shopify_config"
    )
  shopifyCustomers: [Customer]
    @rest(
      setters: [
        { field: "lastOrderId", path: "last_order_id" }
        { field: "firstName", path: "first_name" }
        { field: "lastName", path: "last_name" }
      ]
      resultroot: "customers[]"
      endpoint: "https://$api_key:$api_password@$store_name;.myshopify.com/admin/api/2020-01/customers.json"
      configuration: "shopify_config"
    )
}
